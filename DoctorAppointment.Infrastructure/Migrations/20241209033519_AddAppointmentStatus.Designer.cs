// <auto-generated />
using System;
using DoctorAppointment.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoctorAppointment.Infrastructure.Migrations
{
    [DbContext(typeof(DrAppointmentDbContext))]
    [Migration("20241209033519_AddAppointmentStatus")]
    partial class AddAppointmentStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2024, 11, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 17,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2024, 11, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 15,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 8,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2024, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 14,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 9,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 7,
                            AppointmentDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 9,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            AppointmentDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 4,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            AppointmentDate = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 3,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            AppointmentDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 18,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            AppointmentDate = new DateTime(2024, 11, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 7,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 12,
                            AppointmentDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 20,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 13,
                            AppointmentDate = new DateTime(2024, 11, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 15,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            AppointmentDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 3,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 15,
                            AppointmentDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 12,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            AppointmentDate = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 17,
                            AppointmentDate = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 9,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 18,
                            AppointmentDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 7,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 19,
                            AppointmentDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 4,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AppointmentDate = new DateTime(2024, 11, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            AppointmentDate = new DateTime(2024, 12, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 18,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 22,
                            AppointmentDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 19,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 23,
                            AppointmentDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 18,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            AppointmentDate = new DateTime(2024, 12, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            AppointmentDate = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 9,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            AppointmentDate = new DateTime(2024, 11, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 13,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 27,
                            AppointmentDate = new DateTime(2024, 11, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 13,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 28,
                            AppointmentDate = new DateTime(2024, 12, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 19,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            AppointmentDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 3,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            AppointmentDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 4,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            AppointmentDate = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 32,
                            AppointmentDate = new DateTime(2024, 12, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 8,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            AppointmentDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 14,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            AppointmentDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 19,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            AppointmentDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 5,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            AppointmentDate = new DateTime(2025, 1, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 10,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 37,
                            AppointmentDate = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 11,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 38,
                            AppointmentDate = new DateTime(2024, 11, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 8,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 39,
                            AppointmentDate = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 17,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 40,
                            AppointmentDate = new DateTime(2024, 11, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 1,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 2
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Chìm núi độc trăng.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 1,
                            UserId = 2,
                            YearsOfExperience = 8
                        },
                        new
                        {
                            Id = 2,
                            About = "Hết á mây ừ ừ bốn máy trời vá tàu.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 5,
                            UserId = 3,
                            YearsOfExperience = 4
                        },
                        new
                        {
                            Id = 3,
                            About = "Là khoan hương biển phá biết chín cửa ờ giết.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 5,
                            UserId = 4,
                            YearsOfExperience = 11
                        },
                        new
                        {
                            Id = 4,
                            About = "Á cửa nhà máy việc.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 4,
                            UserId = 5,
                            YearsOfExperience = 12
                        },
                        new
                        {
                            Id = 5,
                            About = "Ba kim á đánh.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 4,
                            UserId = 6,
                            YearsOfExperience = 11
                        },
                        new
                        {
                            Id = 6,
                            About = "Khoan cửa đỏ đang sáu yêu đâu xanh đánh ghét.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 1,
                            UserId = 7,
                            YearsOfExperience = 12
                        },
                        new
                        {
                            Id = 7,
                            About = "Trời nước hết thôi bảy chìm bạn.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 3,
                            UserId = 8,
                            YearsOfExperience = 1
                        },
                        new
                        {
                            Id = 8,
                            About = "Tui chìm tôi phá tui ác lỗi trăng.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 3,
                            UserId = 9,
                            YearsOfExperience = 19
                        },
                        new
                        {
                            Id = 9,
                            About = "Vàng độc sáu vá thuê khoan hương.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 5,
                            UserId = 10,
                            YearsOfExperience = 20
                        },
                        new
                        {
                            Id = 10,
                            About = "Viết anh áo vàng đỏ đỏ quê.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 5,
                            UserId = 11,
                            YearsOfExperience = 1
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 13
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 14
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 15
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 16
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 17
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 18
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 19
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 20
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 21
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 22
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 23
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 24
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 25
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 26
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 28
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 29
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 30
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 31
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "Admin Address",
                            ConcurrencyStamp = "152a1493-69bb-476a-b8de-7c7049421fbc",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEDBGa26j5lAHVIy6Zw4r2APlA2HGMf0FygqbvId9C0/cWGbx5AtIue8+REJK76jBIg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f9b0a836-c26c-47c4-b082-d64215d70e93",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "756 Quang Danh Oval",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Tr%C3%BAc%20C%C6%B0%C6%A1ng%20%C4%90%E1%BB%97",
                            ConcurrencyStamp = "ba3a3f87-6ff9-48cd-88c0-634cd232f42a",
                            DateOfBirth = new DateTime(2014, 10, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "PhiDiep.Duong34@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Trúc Cương Đỗ",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "PHIDIEP.DUONG34@YAHOO.COM",
                            NormalizedUserName = "PHIDIEP.DUONG34@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAcwDybrhF5VRdDg6v0sCEpMSW20qkEdyPCTDNmHXvGTgXtI1cUQhadI6A/Y8Eb9/g==",
                            PhoneNumber = "025 3832 8164",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "190430da-da7c-4808-b56f-0c803ec16d40",
                            TwoFactorEnabled = false,
                            UserName = "PhiDiep.Duong34@yahoo.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "197 Tuyết Lâm Forest",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ng%E1%BB%8Dc%20C%E1%BA%A3nh%20L%C3%A2m",
                            ConcurrencyStamp = "79a8396d-7f27-4115-91bc-fcb39a6fa02f",
                            DateOfBirth = new DateTime(2007, 6, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThanhThuan_Pham@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Ngọc Cảnh Lâm",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "THANHTHUAN_PHAM@YAHOO.COM",
                            NormalizedUserName = "THANHTHUAN_PHAM@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGNgudcUaJiUrakx5dE2hdRdbAw5TS6SNQFkFU6sJbbZ0kbLmVZKvjPnXUZAT6l4HA==",
                            PhoneNumber = "0235 2185 3539",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a05b4e68-4ac2-4415-8f96-59b89c4abcfc",
                            TwoFactorEnabled = false,
                            UserName = "ThanhThuan_Pham@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "132 Ngân Trúc Overpass",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Nguy%C3%AAn%20Nh%C3%A2n%20V%C5%A9",
                            ConcurrencyStamp = "7889e3f9-4363-40b0-b6b8-8f4b4c4b7e5e",
                            DateOfBirth = new DateTime(2018, 7, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BaoChan.Nguyen14@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Nguyên Nhân Vũ",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "BAOCHAN.NGUYEN14@YAHOO.COM",
                            NormalizedUserName = "BAOCHAN.NGUYEN14@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL8bi7i7tc9KlbKO/1JuHvXEJnGgISt2nvRETthZOePb8+QeEUINrP+HzK5t24pnWQ==",
                            PhoneNumber = "024 9350 4494",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "18989a79-4330-4f25-baf5-20f5aee50622",
                            TwoFactorEnabled = false,
                            UserName = "BaoChan.Nguyen14@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "236 Quỳnh Lâm Road",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Huy%20Th%C3%A0nh%20V%C5%A9",
                            ConcurrencyStamp = "845f6be3-cf21-47d2-aee4-c1486a47425c",
                            DateOfBirth = new DateTime(2019, 7, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThanhCong33@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Huy Thành Vũ",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "THANHCONG33@HOTMAIL.COM",
                            NormalizedUserName = "THANHCONG33@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENRahaZrJ5hCQh42xSGt3Rl57NVwGKxRukkuUvLDR9WPD01cCfotaQbKBqp0Q5FXcg==",
                            PhoneNumber = "0203 6314 6742",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1fec9dd9-94b9-4fe6-bf7a-27d3d6abe4e1",
                            TwoFactorEnabled = false,
                            UserName = "ThanhCong33@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "733 Tăng Terrace",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Nam%20H%E1%BA%A3i%20%C4%90%E1%BA%B7ng",
                            ConcurrencyStamp = "35322d4a-403f-4b95-a64e-27604b43c620",
                            DateOfBirth = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BichVan.Trinh@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nam Hải Đặng",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "BICHVAN.TRINH@GMAIL.COM",
                            NormalizedUserName = "BICHVAN.TRINH@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHLnsvbEWA1A4a5/ZmJuZ4WMS4gYzzzw0jhkwCnj8zBQH27RLMWN1APZxURm859AMQ==",
                            PhoneNumber = "0214 6673 5945",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ca79c42-9257-4a18-a81c-2ba20eff64d6",
                            TwoFactorEnabled = false,
                            UserName = "BichVan.Trinh@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "9333 Phạm Views",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=H%E1%BA%A1c%20C%C3%BAc%20L%C3%A2m",
                            ConcurrencyStamp = "e72a80b2-3d7f-4500-8be0-718f8eeb84d3",
                            DateOfBirth = new DateTime(2014, 11, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BaoNgoc_Ho12@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Hạc Cúc Lâm",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "BAONGOC_HO12@HOTMAIL.COM",
                            NormalizedUserName = "BAONGOC_HO12@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECSTFnKi0XfZaKnrCVqovWRzrq/uNYpTeqVObeY6tBOliJTOAB1EQa//fyFSSeSRMg==",
                            PhoneNumber = "026 2635 2479",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "42d29edd-8ac3-414a-9849-787f01631eaf",
                            TwoFactorEnabled = false,
                            UserName = "BaoNgoc_Ho12@hotmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "089 Thục Vân Ramp",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Chi%C3%AAu%20Phong%20T%C3%B4",
                            ConcurrencyStamp = "6ac2ee32-8cc6-4054-ae26-9eb343170358",
                            DateOfBirth = new DateTime(2005, 5, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "MinhKhue_Do@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Chiêu Phong Tô",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "MINHKHUE_DO@GMAIL.COM",
                            NormalizedUserName = "MINHKHUE_DO@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAASmLr/OohLx5JjFte6rC/FZ4egd9dcz94VQJE0iAaCJH8S2RrGCBCAhZBGtKJb+w==",
                            PhoneNumber = "0243 7574 8277",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d687310a-fae5-4a34-9212-9e0fa4a72b53",
                            TwoFactorEnabled = false,
                            UserName = "MinhKhue_Do@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "108 Dương Island",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Trang%20Anh%20T%C3%B4",
                            ConcurrencyStamp = "725fb1fd-efb8-44e6-8498-3ebbeac6ba5c",
                            DateOfBirth = new DateTime(2004, 2, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "AnNguyen93@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Trang Anh Tô",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNGUYEN93@YAHOO.COM",
                            NormalizedUserName = "ANNGUYEN93@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKOIozmV1FbRRET1Npf368xfPpTAXCg/rahqfdxHeahJTc4wJbghsQmidI4CgWq0VA==",
                            PhoneNumber = "026 8206 6252",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6cf7ba95-f55f-40cb-a819-29f34b187cfb",
                            TwoFactorEnabled = false,
                            UserName = "AnNguyen93@yahoo.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "6721 Dương Bridge",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ho%C3%A0i%20Nam%20H%C3%A0",
                            ConcurrencyStamp = "16a0f25f-333f-468a-982f-49b8a0b1f4e4",
                            DateOfBirth = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DaThi_Trinh7@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Hoài Nam Hà",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "DATHI_TRINH7@HOTMAIL.COM",
                            NormalizedUserName = "DATHI_TRINH7@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMRtO3mw7y0v4JJPETItmbB2zxK82ojDoQ7wpUO83JMI1bz0fHYs6eK8y+RM06eunQ==",
                            PhoneNumber = "021 9581 7113",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b9fec8b-dd90-42db-8968-a5a0f415830a",
                            TwoFactorEnabled = false,
                            UserName = "DaThi_Trinh7@hotmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "3551 Mỹ Dung Walks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Linh%20Duy%C3%AAn%20Nguy%E1%BB%85n",
                            ConcurrencyStamp = "b6f6708e-e23c-432a-8ded-b330aedcdcc9",
                            DateOfBirth = new DateTime(2014, 7, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "XuanAn_Nguyen4@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Linh Duyên Nguyễn",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "XUANAN_NGUYEN4@YAHOO.COM",
                            NormalizedUserName = "XUANAN_NGUYEN4@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEO5E0jF5sv3FDwzzczp8EQLPYQeVC8dbwg8JxQ+EoG8z77PBoJlMevli1rhaORf9/Q==",
                            PhoneNumber = "020 8667 2005",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ccee25e-b591-4d41-9794-6625f64ee568",
                            TwoFactorEnabled = false,
                            UserName = "XuanAn_Nguyen4@yahoo.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "11193 Bùi Green",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ng%E1%BB%8Dc%20Di%E1%BB%87p%20V%C5%A9",
                            ConcurrencyStamp = "4bae9b48-b6fe-4e5a-b514-ce895f39afcf",
                            DateOfBirth = new DateTime(1997, 9, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HaiLy0@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Ngọc Diệp Vũ",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "HAILY0@HOTMAIL.COM",
                            NormalizedUserName = "HAILY0@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG431izHtbPvQkf4vlHkQ5XkwloW8tXS44BMqenxhHm3Ifbd/ddyKPXR6FFAoQ+C9Q==",
                            PhoneNumber = "020 6823 7098",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "19b11144-b8b0-494f-a352-c4b0c237223a",
                            TwoFactorEnabled = false,
                            UserName = "HaiLy0@hotmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "44888 Nguyễn Roads",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Li%C3%AAn%20Ki%E1%BB%87t%20T%C3%B4",
                            ConcurrencyStamp = "30209df0-e1e1-48d3-abdc-9694eb614ac7",
                            DateOfBirth = new DateTime(2005, 9, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThaiDuc76@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Liên Kiệt Tô",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "THAIDUC76@GMAIL.COM",
                            NormalizedUserName = "THAIDUC76@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC3VU6yyrC/0r0SwMREx0j8gIxKj5+x6tLyYEVp2UxmrsalbKIEaOlJvwo+BkoAq3w==",
                            PhoneNumber = "029 2987 5699",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46a619e0-bf72-40ff-8136-78b02c2acf42",
                            TwoFactorEnabled = false,
                            UserName = "ThaiDuc76@gmail.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "42205 Diệu Linh Drive",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Hu%E1%BB%87%20An%20B%C3%B9i",
                            ConcurrencyStamp = "deb4666a-6d68-4e5f-96bb-9eb59ecb97b8",
                            DateOfBirth = new DateTime(2018, 3, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KhacViet.Dang@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Huệ An Bùi",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "KHACVIET.DANG@YAHOO.COM",
                            NormalizedUserName = "KHACVIET.DANG@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEO8DOYxuyoTt0ifzWk3WTJc6+kuSrlzeRvwM8pW5kDTIVEQuOOMkodoA51Ihhjyvqg==",
                            PhoneNumber = "0250 9055 1902",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3a5d62be-73a6-485b-9134-e95f7a5c2a24",
                            TwoFactorEnabled = false,
                            UserName = "KhacViet.Dang@yahoo.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "4709 Phúc Duy Islands",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Qu%C3%A2n%20D%C6%B0%C6%A1ng%20L%C3%AA",
                            ConcurrencyStamp = "92bbd079-559c-4bcd-a4df-d6ba5e40b207",
                            DateOfBirth = new DateTime(2003, 4, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "LanThuong47@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Quân Dương Lê",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "LANTHUONG47@GMAIL.COM",
                            NormalizedUserName = "LANTHUONG47@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKKfMi1Zitoy19iJc2cQnte4GcCthTNZ8hSlIYApQRne7R3rEPAd1+DWYqkJAlRiPA==",
                            PhoneNumber = "026 6328 9354",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6a054f34-8a7d-40bb-b200-09ca740f2505",
                            TwoFactorEnabled = false,
                            UserName = "LanThuong47@gmail.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "68190 Hoàng Drives",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Giang%20Lam%20Mai",
                            ConcurrencyStamp = "caaaa43e-e88d-4b0b-b545-1cd9713cceae",
                            DateOfBirth = new DateTime(2022, 12, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "TamHien28@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Giang Lam Mai",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "TAMHIEN28@GMAIL.COM",
                            NormalizedUserName = "TAMHIEN28@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELpYA9gIIfl9VPOOUIFTJ07f53ebmX23ZDEqffpLzVsxw1/87EadCuIck4ggB4nu3A==",
                            PhoneNumber = "0252 5405 5779",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a52e9fd8-28ed-466d-8ece-8fdf94cfb743",
                            TwoFactorEnabled = false,
                            UserName = "TamHien28@gmail.com"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "29461 Đặng Brook",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Di%E1%BB%85m%20Ch%C3%A2u%20Phan",
                            ConcurrencyStamp = "9814254f-c57b-4719-b328-1ff58c33db71",
                            DateOfBirth = new DateTime(2012, 3, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BaoHuynh.Pham66@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Diễm Châu Phan",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "BAOHUYNH.PHAM66@GMAIL.COM",
                            NormalizedUserName = "BAOHUYNH.PHAM66@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBWuN+RD9AHX9R23oWVuEmBHomlNPnV/a0mA4YbheKn46/WGQhg1REygvSChb8raIg==",
                            PhoneNumber = "0246 9028 3711",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "814f0a0a-655f-4d6b-8e50-d1cc9222a96d",
                            TwoFactorEnabled = false,
                            UserName = "BaoHuynh.Pham66@gmail.com"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "425 Đỗ Light",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Huy%20Tr%C3%A2n%20B%C3%B9i",
                            ConcurrencyStamp = "1333637f-0eec-4a1b-8f5d-ec691fb721c2",
                            DateOfBirth = new DateTime(1996, 10, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThuyVan_Do@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Huy Trân Bùi",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "THUYVAN_DO@YAHOO.COM",
                            NormalizedUserName = "THUYVAN_DO@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL5Cnf0S/9ZJwFsNfzAeDFfEqCSILwBkMT+qbyH8O9X6WfZfrAMroflUdvNy4N79Lg==",
                            PhoneNumber = "025 0979 8459",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16b122ea-a866-458e-8666-2c8df5dc2327",
                            TwoFactorEnabled = false,
                            UserName = "ThuyVan_Do@yahoo.com"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "166 Uyển Khanh Circles",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Qu%E1%BB%B3nh%20Hoa%20%C4%90o%C3%A0n",
                            ConcurrencyStamp = "0facb7a1-3511-453d-b3da-16597bb5ef27",
                            DateOfBirth = new DateTime(1999, 5, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HongPhuc_Le14@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Quỳnh Hoa Đoàn",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "HONGPHUC_LE14@GMAIL.COM",
                            NormalizedUserName = "HONGPHUC_LE14@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3Mb6AFKU/NsllsZeVnFJ2QuO4c6uTFL+d2q9W7Ph92WOcI8qbg2L6PpgHk4H+f+g==",
                            PhoneNumber = "021 5237 5654",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "59b6afe9-7b6d-40ae-96fc-af12419791aa",
                            TwoFactorEnabled = false,
                            UserName = "HongPhuc_Le14@gmail.com"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "60051 Nhân Sâm Courts",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ph%C6%B0%E1%BB%A3ng%20V%C5%A9%20%C4%90%E1%BB%97",
                            ConcurrencyStamp = "36ad657e-ab54-44ee-a73a-7e01dd03d4ab",
                            DateOfBirth = new DateTime(2014, 6, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KimThuy_Tang56@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Phượng Vũ Đỗ",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIMTHUY_TANG56@YAHOO.COM",
                            NormalizedUserName = "KIMTHUY_TANG56@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3b+rjQfSAaxpMn5stiPOPS3V5xT5wEGnTdKQ4Q6GJ8BYk/b25wOwOKzTwV1Kg85w==",
                            PhoneNumber = "023 2759 4168",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3cec71b-4136-46e0-8c31-d86acf9f4f07",
                            TwoFactorEnabled = false,
                            UserName = "KimThuy_Tang56@yahoo.com"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "69627 Cao Kỳ Estate",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=V%C3%A2n%20Khanh%20Ph%E1%BA%A1m",
                            ConcurrencyStamp = "9d5120a8-23b9-4830-8926-e1da7ebc7a9a",
                            DateOfBirth = new DateTime(2006, 12, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HongNhan26@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Vân Khanh Phạm",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "HONGNHAN26@YAHOO.COM",
                            NormalizedUserName = "HONGNHAN26@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECk/bLAVgQ00OFiG5LWIggyFTfmSMh/6zntX7XSQMTnHGbmyOVj2mGiaKtBXM48Ssw==",
                            PhoneNumber = "0231 7568 8503",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd881814-a289-4ab6-8243-06a4a1649ef6",
                            TwoFactorEnabled = false,
                            UserName = "HongNhan26@yahoo.com"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "6469 Lê Inlet",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Minh%20H%C3%A0o%20Tr%E1%BB%8Bnh",
                            ConcurrencyStamp = "10e68cac-0c98-47be-abe6-902716d2bfbb",
                            DateOfBirth = new DateTime(2024, 7, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "NgocDanh_Trinh@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Minh Hào Trịnh",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "NGOCDANH_TRINH@YAHOO.COM",
                            NormalizedUserName = "NGOCDANH_TRINH@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBU6tP0NMk5WPidRuZGj26l2wxQrVMChuyL1/bzXUbl8CQtrO2sZx64YeN2EhYXA+Q==",
                            PhoneNumber = "0277 5461 4331",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91f7f0fc-9378-430f-82c9-4c547d998fe4",
                            TwoFactorEnabled = false,
                            UserName = "NgocDanh_Trinh@yahoo.com"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "559 Việt Khải Lock",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Thanh%20Vinh%20V%C5%A9",
                            ConcurrencyStamp = "1e249409-6221-49c3-953f-bec65f33c313",
                            DateOfBirth = new DateTime(1998, 12, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "XuanThanh_Phung@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Thanh Vinh Vũ",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "XUANTHANH_PHUNG@GMAIL.COM",
                            NormalizedUserName = "XUANTHANH_PHUNG@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPauk2EpcHVK4B33I9y0gzCruxSSiQMJX+gPCmniAZwZQ1W2aWRorL1U0ZI8PLkPiw==",
                            PhoneNumber = "0257 2135 7369",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e1090e4f-f286-4797-bcb0-f45e5fbb4854",
                            TwoFactorEnabled = false,
                            UserName = "XuanThanh_Phung@gmail.com"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "099 Mạnh Trình Viaduct",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Kim%20Loan%20V%C5%A9",
                            ConcurrencyStamp = "b006bf0c-e836-46b7-a879-7eaa3d81cc59",
                            DateOfBirth = new DateTime(2006, 5, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BinhMinh53@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Kim Loan Vũ",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "BINHMINH53@HOTMAIL.COM",
                            NormalizedUserName = "BINHMINH53@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDePgyy579bGYvI07pnC2J8wUfeVcQcNpLtCK7TT7S36grcnDoIoP3yXhoQey+iTJQ==",
                            PhoneNumber = "029 5650 0931",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d31b9b8-1381-4c5e-811d-5b2872ad0997",
                            TwoFactorEnabled = false,
                            UserName = "BinhMinh53@hotmail.com"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "376 Phùng Cape",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=H%E1%BA%A3i%20Giang%20Ho%C3%A0ng",
                            ConcurrencyStamp = "fa694612-cfda-4fd4-95bd-4e90e7b7d247",
                            DateOfBirth = new DateTime(2002, 3, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "VietNhan19@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Hải Giang Hoàng",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "VIETNHAN19@HOTMAIL.COM",
                            NormalizedUserName = "VIETNHAN19@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC+vcDBKZwBbBAU57awkkbvyJCo7nxoHQOwD/xYCx/n7tKXxeKYcMQ0m0jrWvYK6yw==",
                            PhoneNumber = "0262 7294 6551",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d2718851-0d07-4a98-acaa-e826653ea49d",
                            TwoFactorEnabled = false,
                            UserName = "VietNhan19@hotmail.com"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "167 Đào Forest",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Thu%E1%BA%ADn%20Th%C3%A0nh%20Tr%E1%BA%A7n",
                            ConcurrencyStamp = "bf572741-e3ac-4ac5-a4ae-247c93f4d614",
                            DateOfBirth = new DateTime(1997, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DinhChuong3@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Thuận Thành Trần",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "DINHCHUONG3@GMAIL.COM",
                            NormalizedUserName = "DINHCHUONG3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKtePw5y05Fd8q8R0fXQ8O5aE1luWaRAU8YTP4jF+A8KUUVATs+82OoVblTT/a17Rw==",
                            PhoneNumber = "020 4611 0499",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db5e87a1-3dde-4627-a831-8f96bb21a5f9",
                            TwoFactorEnabled = false,
                            UserName = "DinhChuong3@gmail.com"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "8672 Khang Kiện Village",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=C%C3%B4ng%20Lu%E1%BA%ADt%20L%C3%AA",
                            ConcurrencyStamp = "d698c9ee-0292-4c38-a11e-118c5cf7999f",
                            DateOfBirth = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThuanPhuong_Ngo@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Công Luật Lê",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "THUANPHUONG_NGO@GMAIL.COM",
                            NormalizedUserName = "THUANPHUONG_NGO@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFrNU/g5nSfQ9497Oa+rBDw1/BFXj+e0FphfGTWm2TeH3S4xM7oc2U8xlmdOfCwq2Q==",
                            PhoneNumber = "028 5977 1783",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8a1d097f-72c2-4195-a1a0-d4140cac608c",
                            TwoFactorEnabled = false,
                            UserName = "ThuanPhuong_Ngo@gmail.com"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "49935 Tô Square",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Thanh%20Lam%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "d22c08dc-fe00-4fda-93a4-0c90febc9ae6",
                            DateOfBirth = new DateTime(2009, 5, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThucVan24@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Thanh Lam Trương",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "THUCVAN24@YAHOO.COM",
                            NormalizedUserName = "THUCVAN24@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEILkdxXg3Hm8D5SQjdf+jvR7uyEkobk/JaBDfwVE8f83vsqSPj7QYYGBBHz8OO25Q==",
                            PhoneNumber = "027 6649 7547",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4183e5d3-b8e0-48a7-9097-0ad1a79dbaef",
                            TwoFactorEnabled = false,
                            UserName = "ThucVan24@yahoo.com"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "0839 Nguyễn Lodge",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=C%E1%BA%A9m%20Linh%20L%C3%A2m",
                            ConcurrencyStamp = "6061aa7a-8f2e-400c-9db9-fcd3d7318b5b",
                            DateOfBirth = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DatHoa39@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Cẩm Linh Lâm",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "DATHOA39@GMAIL.COM",
                            NormalizedUserName = "DATHOA39@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEE8+nU6Qx7H7fGpJ4UnV0f3jALM4PiyfY6VRBft6lvNzpwE0P49FsrbKLv7if4KhrQ==",
                            PhoneNumber = "0223 6547 8801",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "10c8b80f-542d-43ed-9b87-12c135559d8e",
                            TwoFactorEnabled = false,
                            UserName = "DatHoa39@gmail.com"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "6335 Thúy Liễu Parks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Lam%20H%C3%A0%20Nguy%E1%BB%85n",
                            ConcurrencyStamp = "502fbf8d-7636-4ca4-970e-82db29a80f63",
                            DateOfBirth = new DateTime(2016, 11, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BichLien90@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Lam Hà Nguyễn",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "BICHLIEN90@GMAIL.COM",
                            NormalizedUserName = "BICHLIEN90@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIyiUz9KnkuPVCTc0BJHy46q3OGL5s3arHUOjOuGou9TiVD5UiKJNr+7XUPSvlXh8w==",
                            PhoneNumber = "0248 4027 3007",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "910f2fa7-993e-4eef-b0f5-a2279ee42d12",
                            TwoFactorEnabled = false,
                            UserName = "BichLien90@gmail.com"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "79383 Lâm Garden",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Minh%20Giang%20Ph%E1%BA%A1m",
                            ConcurrencyStamp = "685cc47b-e37c-44dc-808e-0ffd5e81c58a",
                            DateOfBirth = new DateTime(2005, 10, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HaTien_Ngo@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Minh Giang Phạm",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "HATIEN_NGO@YAHOO.COM",
                            NormalizedUserName = "HATIEN_NGO@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJh75HHMLhObPyVent6ILKpH0/NvkxeHIv33fZd/PyAm6xbjEBbWBUnV2h542ip7zw==",
                            PhoneNumber = "0256 6507 5934",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "84379ab0-f6e4-44ae-9a73-9a4b86d55cc1",
                            TwoFactorEnabled = false,
                            UserName = "HaTien_Ngo@yahoo.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Patient",
                            NormalizedName = "PATIENT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Doctor",
                            NormalizedName = "DOCTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DoctorAppointment.Domain.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("DoctorAppointment.Domain.Entities.Doctor", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("DoctorAppointment.Domain.Entities.Patient", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Schedules")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
