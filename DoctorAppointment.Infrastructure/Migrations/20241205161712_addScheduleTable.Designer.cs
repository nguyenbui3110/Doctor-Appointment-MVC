// <auto-generated />
using System;
using DoctorAppointment.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoctorAppointment.Infrastructure.Migrations
{
    [DbContext(typeof(DrAppointmentDbContext))]
    [Migration("20241205161712_addScheduleTable")]
    partial class addScheduleTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2024, 12, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 11,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2024, 11, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 12,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 20,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 5,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 7,
                            AppointmentDate = new DateTime(2024, 11, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            AppointmentDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 5,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            AppointmentDate = new DateTime(2024, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            AppointmentDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 10,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 11,
                            AppointmentDate = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 17,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            AppointmentDate = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 13,
                            AppointmentDate = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 6,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 14,
                            AppointmentDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 9,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 15,
                            AppointmentDate = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 3,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 16,
                            AppointmentDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 17,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 17,
                            AppointmentDate = new DateTime(2024, 12, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            AppointmentDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 15,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 19,
                            AppointmentDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 20,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 20,
                            AppointmentDate = new DateTime(2024, 11, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 11,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 21,
                            AppointmentDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 5,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 22,
                            AppointmentDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 14,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 23,
                            AppointmentDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 2,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            AppointmentDate = new DateTime(2024, 11, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 25,
                            AppointmentDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 13,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 26,
                            AppointmentDate = new DateTime(2024, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 14,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 27,
                            AppointmentDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 15,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 28,
                            AppointmentDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 11,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            AppointmentDate = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 20,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            AppointmentDate = new DateTime(2024, 11, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 20,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            AppointmentDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 13,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 32,
                            AppointmentDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 6,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            AppointmentDate = new DateTime(2024, 11, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 12,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            AppointmentDate = new DateTime(2024, 11, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 35,
                            AppointmentDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 17,
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 36,
                            AppointmentDate = new DateTime(2024, 11, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 7,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            AppointmentDate = new DateTime(2024, 12, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 18,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            Status = 3
                        },
                        new
                        {
                            Id = 38,
                            AppointmentDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 11,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Status = 2
                        },
                        new
                        {
                            Id = 39,
                            AppointmentDate = new DateTime(2024, 12, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 10,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            AppointmentDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            IsDeleted = false,
                            PatientId = 16,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0),
                            Status = 3
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Đỏ tím xuồng leo thuyền thế.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 2,
                            UserId = 2,
                            YearsOfExperience = 9
                        },
                        new
                        {
                            Id = 2,
                            About = "Hàng tui mua xuồng núi anh khoan quần.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 2,
                            UserId = 3,
                            YearsOfExperience = 18
                        },
                        new
                        {
                            Id = 3,
                            About = "Khoảng nón việc.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 2,
                            UserId = 4,
                            YearsOfExperience = 7
                        },
                        new
                        {
                            Id = 4,
                            About = "Quần nha áo mây bạn gió con.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 3,
                            UserId = 5,
                            YearsOfExperience = 6
                        },
                        new
                        {
                            Id = 5,
                            About = "Làm áo khoảng hết không đang.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 2,
                            UserId = 6,
                            YearsOfExperience = 18
                        },
                        new
                        {
                            Id = 6,
                            About = "Ác hương gió đồng.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 4,
                            UserId = 7,
                            YearsOfExperience = 10
                        },
                        new
                        {
                            Id = 7,
                            About = "Đá hương hương được máy hết tàu gì á bơi.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 3,
                            UserId = 8,
                            YearsOfExperience = 4
                        },
                        new
                        {
                            Id = 8,
                            About = "Đánh thuê bạn tủ đánh.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 1,
                            UserId = 9,
                            YearsOfExperience = 1
                        },
                        new
                        {
                            Id = 9,
                            About = "Ừ nhà chìm vẽ tủ mướn bảy con bảy chín.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 4,
                            UserId = 10,
                            YearsOfExperience = 4
                        },
                        new
                        {
                            Id = 10,
                            About = "Áo vàng xe độc cửa con khoan xanh thích làm.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Specialization = 4,
                            UserId = 11,
                            YearsOfExperience = 11
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 13
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 14
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 15
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 16
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 17
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 18
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 19
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 20
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 21
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 22
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 23
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 24
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 25
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 26
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 27
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 28
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 29
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 30
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 31
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 6,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 8,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 9,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 2,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 3,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 4,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 5,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 6,
                            DoctorId = 10,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "Admin Address",
                            ConcurrencyStamp = "637a49db-b108-45fb-b628-072e993df7e0",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEE3KfFaRB/nAUI1S48tH//v6nxAPgTNmp2IZ+RTu2FGjTT6MSX91iCN83vs9oE8oCw==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5666438c-7d10-4944-8287-586a780ba783",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "23019 Đinh Drives",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Huy%20Anh%20V%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "3cffe50c-c86a-4d44-9f38-0dc50f6f10e9",
                            DateOfBirth = new DateTime(2011, 4, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KieuGiang15@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Huy Anh Vương",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIEUGIANG15@YAHOO.COM",
                            NormalizedUserName = "KIEUGIANG15@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEN4iGmadyVUwakXKEY/kTPvmP1mBLOUAmLozS2KACK3yNcjexuKXAKfMqT6dYKZ7Xg==",
                            PhoneNumber = "028 7637 9062",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "67d8c1d2-6edf-4e65-896d-ab2d0bc71b62",
                            TwoFactorEnabled = false,
                            UserName = "KieuGiang15@yahoo.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "7964 Cẩm Thúy Shoal",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Minh%20Thu%20Phan",
                            ConcurrencyStamp = "6cc2335d-172b-4bfa-a662-d0d9c4a88deb",
                            DateOfBirth = new DateTime(2013, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ManhTuan.Dang@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Minh Thu Phan",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANHTUAN.DANG@YAHOO.COM",
                            NormalizedUserName = "MANHTUAN.DANG@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEM0ni8vGnlszPxaouvruTlqx6k0QRkiaQmgn5q7VOhFnUSSMDxxoTiOqg/fG9vg9Fg==",
                            PhoneNumber = "0228 2148 8120",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b05e3fdf-1612-4b7d-9b93-3ae4a4a847a4",
                            TwoFactorEnabled = false,
                            UserName = "ManhTuan.Dang@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "811 Minh Thương Square",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=C%C3%B4ng%20L%E1%BB%99c%20%C4%90o%C3%A0n",
                            ConcurrencyStamp = "3eaee038-0cb6-4932-9c80-a1ed569898d5",
                            DateOfBirth = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KimPhuong.Ngo53@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Công Lộc Đoàn",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIMPHUONG.NGO53@YAHOO.COM",
                            NormalizedUserName = "KIMPHUONG.NGO53@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAyM/MHhp2fbcBUrdBm/LgvOX7byVkMqcKByd9xhTGkGzfBCY+JtCQGt0CUCSHAtqQ==",
                            PhoneNumber = "0230 1795 6838",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "13c0bc18-2240-421d-9fa8-61f36c892b85",
                            TwoFactorEnabled = false,
                            UserName = "KimPhuong.Ngo53@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "176 Anh Chi Square",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Kim%20Sa%20Ng%C3%B4",
                            ConcurrencyStamp = "ce52caba-a302-4f21-ab20-642db7dae6d3",
                            DateOfBirth = new DateTime(2000, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HongNhuan.Hoang87@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Kim Sa Ngô",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "HONGNHUAN.HOANG87@YAHOO.COM",
                            NormalizedUserName = "HONGNHUAN.HOANG87@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEF3nZcPu6iwovOalfg+/dDDDt//CNqNbhhk/Q70Z9wIs7vKD3/jYssHwWgdCgJM63A==",
                            PhoneNumber = "026 2404 7094",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a557aefd-ab2f-42d6-976e-73a1fc8ce0f8",
                            TwoFactorEnabled = false,
                            UserName = "HongNhuan.Hoang87@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "2774 Ngô Common",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Th%C3%B9y%20My%20Mai",
                            ConcurrencyStamp = "6aca0f0b-b0f3-4a1f-9678-5d6b1cafcfce",
                            DateOfBirth = new DateTime(2001, 2, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KienGiang.Bui5@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Thùy My Mai",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIENGIANG.BUI5@YAHOO.COM",
                            NormalizedUserName = "KIENGIANG.BUI5@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAjMOCOcZHR9pASFdtZuL++6FxAyPTMae0Sg6kequ7m3Jz+OLV9CMoPdFt6XZ4vLdw==",
                            PhoneNumber = "024 4736 5540",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15385a79-b116-4c11-96c9-1bf6c38994f9",
                            TwoFactorEnabled = false,
                            UserName = "KienGiang.Bui5@yahoo.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "372 Quốc Minh Centers",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=B%C3%ADch%20Ng%E1%BB%8Dc%20L%C3%AA",
                            ConcurrencyStamp = "ac59547d-4899-4bf8-8e57-b26d6ed20314",
                            DateOfBirth = new DateTime(1996, 1, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "MyNhi.Hoang@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Bích Ngọc Lê",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "MYNHI.HOANG@GMAIL.COM",
                            NormalizedUserName = "MYNHI.HOANG@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEXU7qa681whzAC6evg+HzsuuvP8WbDzAAZwvKebLFSe4QyMlMtmfVxsdWOtBzAD8Q==",
                            PhoneNumber = "0206 8940 5714",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "23e679bf-8ed8-4922-9394-460c1d481e9c",
                            TwoFactorEnabled = false,
                            UserName = "MyNhi.Hoang@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "006 Ngọc Tú Road",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=H%C3%B9ng%20S%C6%A1n%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "27224eec-aebe-4848-b131-be369fd7b505",
                            DateOfBirth = new DateTime(1996, 11, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DanhSon62@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Hùng Sơn Trương",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "DANHSON62@YAHOO.COM",
                            NormalizedUserName = "DANHSON62@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEP9VzpSCkVnnoiWuj7r+KAaCvBwOoctdynr4exGOIApix9juXqsWDeTgGsHhtvYixA==",
                            PhoneNumber = "023 3405 1163",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44594a63-b2e7-4725-bbcd-5c6e95b8d03a",
                            TwoFactorEnabled = false,
                            UserName = "DanhSon62@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "7480 Hoàng Estate",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=T%C3%B4n%20L%E1%BB%85%20%C4%90inh",
                            ConcurrencyStamp = "004f23b5-a573-4b6a-9893-e745da202a3b",
                            DateOfBirth = new DateTime(2010, 9, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "XuanBao26@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Tôn Lễ Đinh",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "XUANBAO26@GMAIL.COM",
                            NormalizedUserName = "XUANBAO26@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAqx2eFeBXow1PiSqCG7gfNIPyAv+F7FwKXh8lEDMhlDgdM6olyuXgHDBZ1KR5uZ0Q==",
                            PhoneNumber = "0279 7734 4838",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e6160b2-c733-43a4-9c90-80013c328aad",
                            TwoFactorEnabled = false,
                            UserName = "XuanBao26@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "59821 Trương Brooks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Thi%C3%AAn%20%C3%90%E1%BB%A9c%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "c71dd67b-84ac-442d-90ad-755daf8db87f",
                            DateOfBirth = new DateTime(2015, 12, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HuuCanh.Hoang@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Thiên Ðức Trương",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "HUUCANH.HOANG@YAHOO.COM",
                            NormalizedUserName = "HUUCANH.HOANG@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOtWiPh1gwJ+IUjTz3iAmZyFH6vWQWEJfNW1wfOzm3MOejYPC3Hcng+MysV5icD5OA==",
                            PhoneNumber = "0273 5513 8978",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f9c69a10-c7c2-4fd6-845f-5556dae4879b",
                            TwoFactorEnabled = false,
                            UserName = "HuuCanh.Hoang@yahoo.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "079 Hương Lan Pass",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=V%C4%A9nh%20Long%20%C4%90%C3%A0o",
                            ConcurrencyStamp = "106d6a10-859e-4f63-84c3-c0e59f662a20",
                            DateOfBirth = new DateTime(2017, 3, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThanhHao.Trinh@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Vĩnh Long Đào",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "THANHHAO.TRINH@HOTMAIL.COM",
                            NormalizedUserName = "THANHHAO.TRINH@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECI9ff7jJPrC+bwAVFSI2KGmJmZx+0d/rJIBPw0WnasVPbNkMVxldHAOY7lnAElwHg==",
                            PhoneNumber = "0201 6386 2134",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b62d7ae-4d28-4b9d-8491-7c916e757315",
                            TwoFactorEnabled = false,
                            UserName = "ThanhHao.Trinh@hotmail.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "96265 Tăng Rest",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=M%E1%BB%99ng%20Thi%20Phan",
                            ConcurrencyStamp = "ca8baadb-0287-40f6-9aa8-00dcd0c6c345",
                            DateOfBirth = new DateTime(1999, 2, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HoangKhang_Hoang93@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Mộng Thi Phan",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOANGKHANG_HOANG93@YAHOO.COM",
                            NormalizedUserName = "HOANGKHANG_HOANG93@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEmWPrY4bMqT9K6YAhlFWzGg/AaCTXN8XkrureWPK00dOqbyU7iA+lA6V2BaI0PRJg==",
                            PhoneNumber = "026 6392 7050",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a54983b6-a5ef-4571-a6fc-f640aa905120",
                            TwoFactorEnabled = false,
                            UserName = "HoangKhang_Hoang93@yahoo.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "34568 Quang Thuận Gardens",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=S%C6%A1n%20T%C3%B9ng%20B%C3%B9i",
                            ConcurrencyStamp = "81375969-1ef5-43bb-80a5-c2b8b2d227b3",
                            DateOfBirth = new DateTime(1999, 2, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KimThy99@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Sơn Tùng Bùi",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIMTHY99@YAHOO.COM",
                            NormalizedUserName = "KIMTHY99@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAGWXgTFyP501xl8QMi9xwXFf4cHRIf7jWU4oGBJF8xCGtA2zl+7YlXfJKhpG04JIA==",
                            PhoneNumber = "029 5361 2429",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16a7b4a1-29d3-47e9-bd93-9fe2c659ebd1",
                            TwoFactorEnabled = false,
                            UserName = "KimThy99@yahoo.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "982 Lâm Knoll",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=B%C3%ACnh%20Y%C3%AAn%20H%C3%A0",
                            ConcurrencyStamp = "df1cb371-4841-4942-affa-054cc7a0682c",
                            DateOfBirth = new DateTime(2017, 2, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "QuyVinh_Nguyen@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Bình Yên Hà",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "QUYVINH_NGUYEN@YAHOO.COM",
                            NormalizedUserName = "QUYVINH_NGUYEN@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENXSCiaI9hUR8Gwb6ecLfJ+f6IsrvAtXVQtUomdEDsxbEodkoeJN8eB9qoYNp4zfhg==",
                            PhoneNumber = "023 8391 1597",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9177979-5fce-45f0-b472-264b2337bc40",
                            TwoFactorEnabled = false,
                            UserName = "QuyVinh_Nguyen@yahoo.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "606 Uyển Nhi Throughway",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Quy%E1%BA%BFt%20Th%E1%BA%AFng%20Nguy%E1%BB%85n",
                            ConcurrencyStamp = "35ceb6dd-bfb4-4ea9-be25-6f11e8e5a0a9",
                            DateOfBirth = new DateTime(2005, 5, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "PhuocAn_Truong40@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Quyết Thắng Nguyễn",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "PHUOCAN_TRUONG40@YAHOO.COM",
                            NormalizedUserName = "PHUOCAN_TRUONG40@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFEOjgGPzYEIFxPcGw01Tuo7G+fRivwvVZQStO8Rlm+lbiJBHZfFGoRJlHB6tTPMFw==",
                            PhoneNumber = "0278 6261 0942",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "67562521-5bda-4af6-8e5e-063e28de3cf4",
                            TwoFactorEnabled = false,
                            UserName = "PhuocAn_Truong40@yahoo.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "95614 Xuân Yến Locks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=S%C6%A1n%20H%C3%A0%20Phan",
                            ConcurrencyStamp = "c8ec466a-ca21-497a-be93-8f3be4bcb5f7",
                            DateOfBirth = new DateTime(2013, 12, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DonThuan70@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Sơn Hà Phan",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "DONTHUAN70@YAHOO.COM",
                            NormalizedUserName = "DONTHUAN70@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEgiHg2ren2po1GzkvHaL0x/gaMzlv979wYmH3psBmpRb92kbAXkGnm0/ZcLcGQvMA==",
                            PhoneNumber = "0285 1877 1256",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b354e051-5f3d-4051-b909-e8ca1a2d30da",
                            TwoFactorEnabled = false,
                            UserName = "DonThuan70@yahoo.com"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "64695 Nguyễn Corner",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Kh%E1%BA%AFc%20Minh%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "ae6b48eb-7f06-4914-89ba-afe18e6c0f31",
                            DateOfBirth = new DateTime(2015, 8, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "LamTruong_Hoang96@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Khắc Minh Trương",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "LAMTRUONG_HOANG96@GMAIL.COM",
                            NormalizedUserName = "LAMTRUONG_HOANG96@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOb0fyArVxQJ7nEdL0q322as3euYY9BccfzFeAScxa7fU02EXPzS96+CEB85nThhWA==",
                            PhoneNumber = "0280 1187 5062",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "803250bd-80c4-4694-ab41-04d7ed85933e",
                            TwoFactorEnabled = false,
                            UserName = "LamTruong_Hoang96@gmail.com"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "570 Tăng Gateway",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Qu%E1%BB%B3nh%20Sa%20Mai",
                            ConcurrencyStamp = "80778bbd-4daf-4f36-a72c-1822278a7da6",
                            DateOfBirth = new DateTime(2011, 8, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ChungThuy_Nguyen59@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Quỳnh Sa Mai",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "CHUNGTHUY_NGUYEN59@YAHOO.COM",
                            NormalizedUserName = "CHUNGTHUY_NGUYEN59@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGsSZENRXnGDRCX8d4MAGFRX90tm6JGFOzDVAhOFXPY13Zel0fx1+u1SXSTEbKcbYA==",
                            PhoneNumber = "029 4519 6109",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11a1dc59-1ab4-474d-a876-0c81fded43cf",
                            TwoFactorEnabled = false,
                            UserName = "ChungThuy_Nguyen59@yahoo.com"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "997 Thái Hồng Isle",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Chu%E1%BA%A9n%20Khoa%20%C4%90%E1%BA%B7ng",
                            ConcurrencyStamp = "503d096c-4ddc-4ed0-ac9c-1f546a579b4a",
                            DateOfBirth = new DateTime(2011, 1, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "MinhVy61@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Chuẩn Khoa Đặng",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "MINHVY61@GMAIL.COM",
                            NormalizedUserName = "MINHVY61@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDm1ZhMvBcdwpVSvAjnf78KjmXpi8Sv1sG+4YbjAJJRP1xUTLbJnoT+93ciots9Wfw==",
                            PhoneNumber = "020 4288 5112",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d46597d-52ff-47e2-869d-1ccbd2b9659f",
                            TwoFactorEnabled = false,
                            UserName = "MinhVy61@gmail.com"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "415 Tăng Falls",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Gia%20Anh%20%C4%90o%C3%A0n",
                            ConcurrencyStamp = "fa7fbe3e-4dde-4ae8-9c08-d936cb3a2210",
                            DateOfBirth = new DateTime(1996, 6, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DiemHang.Hoang@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Gia Anh Đoàn",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "DIEMHANG.HOANG@GMAIL.COM",
                            NormalizedUserName = "DIEMHANG.HOANG@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEERJw1mTtkCdHiR+zmY+76kGtn3H+z40fTLevbsL21kY+osOXLtxgufw+KASlfJhOQ==",
                            PhoneNumber = "026 8087 7219",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1117e856-e759-4582-8d55-da8f72d94999",
                            TwoFactorEnabled = false,
                            UserName = "DiemHang.Hoang@gmail.com"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "6571 Bùi Groves",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=H%E1%BB%AFu%20B%E1%BA%A3o%20%C4%90%E1%BB%97",
                            ConcurrencyStamp = "d7e04d31-2553-48e3-853f-295b6391dee1",
                            DateOfBirth = new DateTime(2002, 6, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "CuongNghi.Ngo54@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Hữu Bảo Đỗ",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "CUONGNGHI.NGO54@YAHOO.COM",
                            NormalizedUserName = "CUONGNGHI.NGO54@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAB8wJpqLCW/K3VRIktYcKffCrLetYjtVIZYZt59A7SDk1cCLh1llYtepXEgoGr4zw==",
                            PhoneNumber = "0208 1362 9975",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9339c67c-8d0a-471c-8ec0-25204952f2a7",
                            TwoFactorEnabled = false,
                            UserName = "CuongNghi.Ngo54@yahoo.com"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "4524 Thanh Thảo Forks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Qu%C3%BD%20Kh%C3%A1nh%20%C4%90inh",
                            ConcurrencyStamp = "9ba10eb2-dd1c-4170-b94b-a95cb4fbd2e5",
                            DateOfBirth = new DateTime(2007, 2, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HangAnh8@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Quý Khánh Đinh",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "HANGANH8@HOTMAIL.COM",
                            NormalizedUserName = "HANGANH8@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIHXs0Wcu6usnl+hIowdJ7psZn+ksGdRV4lYylOyOABNcsu9SjHBIdH7BvcS+6Chkw==",
                            PhoneNumber = "0244 5333 7096",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "14c7351b-3b7f-4d50-ad70-9c4bb88b650d",
                            TwoFactorEnabled = false,
                            UserName = "HangAnh8@hotmail.com"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "3532 Trương Crescent",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Kim%20Hoa%20V%C5%A9",
                            ConcurrencyStamp = "e32ffafd-f01a-45f2-9238-d0b81255c42f",
                            DateOfBirth = new DateTime(2015, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "ThucNhi_Bui@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Kim Hoa Vũ",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "THUCNHI_BUI@YAHOO.COM",
                            NormalizedUserName = "THUCNHI_BUI@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMJTQ8PsN3uOEZohSFwlIS6HSpR65dqJDk9m0z17cr3OdiphQEVhPnjXJyJUTEAZZw==",
                            PhoneNumber = "0294 6705 2522",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "df2b07ba-de56-4b80-9b8e-df73ee397336",
                            TwoFactorEnabled = false,
                            UserName = "ThucNhi_Bui@yahoo.com"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "81003 Bích Vân Motorway",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=L%E1%BA%A1c%20Ph%C3%BAc%20T%C3%B4",
                            ConcurrencyStamp = "673fe694-0d01-4a75-8244-ba19da1e120b",
                            DateOfBirth = new DateTime(2008, 6, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "MongHoan.Le10@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Lạc Phúc Tô",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "MONGHOAN.LE10@GMAIL.COM",
                            NormalizedUserName = "MONGHOAN.LE10@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEF4afLLU42xKg2h8Cm0ngkegeqcXOPUDeeZ9YyWSuC+N4ddxPEzkK8ObWLuIdjjCPw==",
                            PhoneNumber = "025 7318 6696",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0efa1dc-b9e1-401f-a60a-d9cdcd06b00d",
                            TwoFactorEnabled = false,
                            UserName = "MongHoan.Le10@gmail.com"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "33898 Thương Nga Crossing",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Minh%20Ph%C6%B0%C6%A1ng%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "95da1aa3-cc0a-4947-8a66-fa9621009ee0",
                            DateOfBirth = new DateTime(2008, 8, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "QuocHai42@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Minh Phương Trương",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "QUOCHAI42@YAHOO.COM",
                            NormalizedUserName = "QUOCHAI42@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKyTyn0ipA+Nx/P3hhA07wabjdVuTSAaD45BMlu+kGya9f2uzL6JR6zriJjXrAFU4Q==",
                            PhoneNumber = "0283 1217 1784",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7ee1e52e-a2fe-403e-9592-c359cbd7489d",
                            TwoFactorEnabled = false,
                            UserName = "QuocHai42@yahoo.com"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "8294 Đặng Parkway",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ph%C6%B0%E1%BB%9Bc%20Nh%C3%A2n%20%C4%90%C3%A0o",
                            ConcurrencyStamp = "2dd0758c-e794-4f89-954f-948719050cf4",
                            DateOfBirth = new DateTime(2021, 11, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "QuocPhong.Hoang48@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Phước Nhân Đào",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "QUOCPHONG.HOANG48@YAHOO.COM",
                            NormalizedUserName = "QUOCPHONG.HOANG48@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGsZeppTSeYjD2QI8Uj32Bjl0taZi8tIaq5AyYo7X5gQqTMFYpAdHqeoGb/5kNieYA==",
                            PhoneNumber = "022 3154 2711",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a7b93673-715f-4b18-9940-b53c0b0d814c",
                            TwoFactorEnabled = false,
                            UserName = "QuocPhong.Hoang48@yahoo.com"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "170 Tăng Village",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Ho%C3%A0ng%20Mi%C3%AAn%20Ng%C3%B4",
                            ConcurrencyStamp = "e10329fa-0653-447c-ba6e-74e7743ea11e",
                            DateOfBirth = new DateTime(2007, 1, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "DacTrong.Vu7@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Hoàng Miên Ngô",
                            Gender = 3,
                            LockoutEnabled = false,
                            NormalizedEmail = "DACTRONG.VU7@HOTMAIL.COM",
                            NormalizedUserName = "DACTRONG.VU7@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL7eBQ2E8YZ+TXhFLizbiioiHJqQvliooaTD2Dl7UPSTwydxCx+Mh5pYcDx2DZo9VA==",
                            PhoneNumber = "0237 6289 6830",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80c94ff7-e603-46fd-a375-d922e6e1b62a",
                            TwoFactorEnabled = false,
                            UserName = "DacTrong.Vu7@hotmail.com"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "7791 Anh Quân Orchard",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=T%C6%B0%E1%BB%9Dng%20L%C3%A2n%20Mai",
                            ConcurrencyStamp = "25813d12-b807-488f-ad4a-da4327cc70dc",
                            DateOfBirth = new DateTime(1995, 1, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HaiNam.Trinh76@yahoo.com",
                            EmailConfirmed = true,
                            FullName = "Tường Lân Mai",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "HAINAM.TRINH76@YAHOO.COM",
                            NormalizedUserName = "HAINAM.TRINH76@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHZ3T1QNx7iTjRTPzszbVJ8KrfOmXTHYZvHtOKCyzvXY3lGIGYP7tcbSLtsb1IkSdg==",
                            PhoneNumber = "0232 3459 7648",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b775531f-3308-4668-b6ea-d424e9c92f5d",
                            TwoFactorEnabled = false,
                            UserName = "HaiNam.Trinh76@yahoo.com"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "14781 Huệ Lan Manors",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Th%C3%B9y%20Nhi%20%C4%90%C3%A0o",
                            ConcurrencyStamp = "2f7c30f3-69c7-4732-87f6-9ed1acc4a64a",
                            DateOfBirth = new DateTime(2002, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "KhanhHa.Do95@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Thùy Nhi Đào",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "KHANHHA.DO95@GMAIL.COM",
                            NormalizedUserName = "KHANHHA.DO95@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIsMmdchEBy8ka3Ft4jJaDHg34QMod0BLEL2O94Tddz2SMuP1QoXB2iHgfRDIvvyMA==",
                            PhoneNumber = "0262 2625 7845",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7029aff3-00b5-40ce-8ea1-7e92b5899f91",
                            TwoFactorEnabled = false,
                            UserName = "KhanhHa.Do95@gmail.com"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "497 Đinh Forks",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=H%E1%BA%A3i%20San%20T%C3%B4",
                            ConcurrencyStamp = "1b1c0f8c-68b0-4001-a908-2d779a86f6b5",
                            DateOfBirth = new DateTime(2022, 5, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "MaiThu_Do83@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Hải San Tô",
                            Gender = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "MAITHU_DO83@HOTMAIL.COM",
                            NormalizedUserName = "MAITHU_DO83@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBEnEaWLRU125Kq9xhkhM9JBgT/fsq9bMELvbVpGsHrYWKyr9GV2UURpJkEIVG+VSA==",
                            PhoneNumber = "021 4585 4420",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ee0d0a27-6e8f-4904-9886-8f214f97ec34",
                            TwoFactorEnabled = false,
                            UserName = "MaiThu_Do83@hotmail.com"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "05465 Hồ Summit",
                            AvatarUrl = "https://via.placeholder.com/100x100/cccccc/9c9c9c.png?text=Thy%20Khanh%20Tr%C6%B0%C6%A1ng",
                            ConcurrencyStamp = "b22ec521-57af-4c42-978f-1c9beba8e3c9",
                            DateOfBirth = new DateTime(1999, 11, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "HongThuy_Duong61@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Thy Khanh Trương",
                            Gender = 2,
                            LockoutEnabled = false,
                            NormalizedEmail = "HONGTHUY_DUONG61@GMAIL.COM",
                            NormalizedUserName = "HONGTHUY_DUONG61@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEWFFxjJ8cKcI1HeiRobodP17bVNDup86myKHGkxy+KD56mNOlQbkgZWvQFmMYJ5Ow==",
                            PhoneNumber = "027 0033 1356",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "099aff3e-224a-419a-8a34-9031e1b192ef",
                            TwoFactorEnabled = false,
                            UserName = "HongThuy_Duong61@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Patient",
                            NormalizedName = "PATIENT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Doctor",
                            NormalizedName = "DOCTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DoctorAppointment.Domain.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("DoctorAppointment.Domain.Entities.Doctor", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("DoctorAppointment.Domain.Entities.Patient", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Schedules")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DoctorAppointment.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("DoctorAppointment.Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
