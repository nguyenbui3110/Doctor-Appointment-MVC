import Hammer from"hammerjs";import{each,valueOrDefault,almostEquals,callback,sign,getRelativePosition,_isPointInArea}from"chart.js/helpers";const getModifierKey=e=>e&&e.enabled&&e.modifierKey,keyPressed=(e,t)=>e&&t[e+"Key"],keyNotPressed=(e,t)=>e&&!t[e+"Key"];function directionEnabled(e,t,n){return void 0===e||("string"==typeof e?-1!==e.indexOf(t):"function"==typeof e&&-1!==e({chart:n}).indexOf(t))}function directionsEnabled(e,t){return"string"==typeof(e="function"==typeof e?e({chart:t}):e)?{x:-1!==e.indexOf("x"),y:-1!==e.indexOf("y")}:{x:!1,y:!1}}function debounce(e,t){let n;return function(){return clearTimeout(n),n=setTimeout(e,t),t}}function getScaleUnderPoint({x:t,y:n},e){var a=e.scales,o=Object.keys(a);for(let e=0;e<o.length;e++){var i=a[o[e]];if(n>=i.top&&n<=i.bottom&&t>=i.left&&t<=i.right)return i}return null}function getEnabledScalesByPoint(e,t,n){var{mode:e="xy",scaleMode:a,overScaleMode:o}=e||{},t=getScaleUnderPoint(t,n);const i=directionsEnabled(e,n),r=directionsEnabled(a,n);if(o){var l=directionsEnabled(o,n);for(const m of["x","y"])l[m]&&(r[m]=i[m],i[m]=!1)}if(t&&r[t.axis])return[t];const c=[];return each(n.scales,function(e){i[e.axis]&&c.push(e)}),c}const chartStates=new WeakMap;function getState(e){let t=chartStates.get(e);return t||(t={originalScaleLimits:{},updatedScaleLimits:{},handlers:{},panDelta:{},dragging:!1,panning:!1},chartStates.set(e,t)),t}function removeState(e){chartStates.delete(e)}function zoomDelta(e,t,n,a){e=Math.max(0,Math.min(1,(e-t)/n||0));return{min:a*e,max:a*(1-e)}}function getValueAtPoint(e,t){t=e.isHorizontal()?t.x:t.y;return e.getValueForPixel(t)}function linearZoomDelta(e,t,n){var a=e.max-e.min,t=a*(t-1);return zoomDelta(getValueAtPoint(e,n),e.min,a,t)}function logarithmicZoomRange(e,t,n){n=getValueAtPoint(e,n);if(void 0===n)return{min:e.min,max:e.max};var a=Math.log10(e.min),e=Math.log10(e.max),o=e-a,n=zoomDelta(Math.log10(n),a,o,o*(t-1));return{min:Math.pow(10,a+n.min),max:Math.pow(10,e-n.max)}}function getScaleLimits(e,t){return t&&(t[e.id]||t[e.axis])||{}}function getLimit(e,t,n,a,o){let i=n[a];return"original"===i&&(n=e.originalScaleLimits[t.id][a],i=valueOrDefault(n.options,n.scale)),valueOrDefault(i,o)}function linearRange(e,t,n){t=e.getValueForPixel(t),e=e.getValueForPixel(n);return{min:Math.min(t,e),max:Math.max(t,e)}}function fixRange(e,{min:t,max:n,minLimit:a,maxLimit:o},i){var r=(e-n+t)/2,l=(n+=r,i.min.options??i.min.scale),i=i.max.options??i.max.scale,c=e/1e6;return almostEquals(t-=r,l,c)&&(t=l),almostEquals(n,i,c)&&(n=i),t<a?(t=a,n=Math.min(a+e,o)):o<n&&(n=o,t=Math.max(o-e,a)),{min:t,max:n}}function updateRange(e,{min:t,max:n},a,o=!1){const i=getState(e.chart),r=e["options"];var a=getScaleLimits(e,a),{minRange:l=0}=a,c=getLimit(i,e,a,"min",-1/0),a=getLimit(i,e,a,"max",1/0);if("pan"===o&&(t<c||a<n))return!0;var m=e.max-e.min,s=o?Math.max(n-t,l):m;if(o&&s===l&&m<=l)return!0;o=fixRange(s,{min:t,max:n,minLimit:c,maxLimit:a},i.originalScaleLimits[e.id]);return r.min=o.min,r.max=o.max,i.updatedScaleLimits[e.id]=o,e.parse(o.min)!==e.min||e.parse(o.max)!==e.max}function zoomNumericalScale(e,t,n,a){t=linearZoomDelta(e,t,n);return updateRange(e,{min:e.min+t.min,max:e.max-t.max},a,!0)}function zoomLogarithmicScale(e,t,n,a){return updateRange(e,logarithmicZoomRange(e,t,n),a,!0)}function zoomRectNumericalScale(e,t,n,a){updateRange(e,linearRange(e,t,n),a,!0)}const integerChange=e=>0===e||isNaN(e)?0:e<0?Math.min(Math.round(e),-1):Math.max(Math.round(e),1);function existCategoryFromMaxZoom(e){var t=e.getLabels().length-1;0<e.min&&--e.min,e.max<t&&(e.max+=1)}function zoomCategoryScale(e,t,n,a){n=linearZoomDelta(e,t,n),e.min===e.max&&t<1&&existCategoryFromMaxZoom(e),t={min:e.min+integerChange(n.min),max:e.max-integerChange(n.max)};return updateRange(e,t,a,!0)}function scaleLength(e){return e.isHorizontal()?e.width:e.height}function panCategoryScale(e,t,n){var a=e.getLabels().length-1;let{min:o,max:i}=e;var r=Math.max(i-o,1),l=Math.round(scaleLength(e)/Math.max(r,10)),c=Math.round(Math.abs(t/l));let m;return t<-l?(i=Math.min(i+c,a),o=1===r?i:i-r,m=i===a):l<t&&(o=Math.max(0,o-c),i=1===r?o:o+r,m=0===o),updateRange(e,{min:o,max:i},n)||m}const OFFSETS={second:500,minute:3e4,hour:18e5,day:432e5,week:3024e5,month:1296e6,quarter:5184e6,year:157248e5};function panNumericalScale(e,t,n,a=!1){var{min:o,max:i,options:r}=e,r=r.time&&r.time.round,r=OFFSETS[r]||0,o=e.getValueForPixel(e.getPixelForValue(o+r)-t),i=e.getValueForPixel(e.getPixelForValue(i+r)-t);return!(!isNaN(o)&&!isNaN(i))||updateRange(e,{min:o,max:i},n,!!a&&"pan")}function panNonLinearScale(e,t,n){return panNumericalScale(e,t,n,!0)}const zoomFunctions={category:zoomCategoryScale,default:zoomNumericalScale,logarithmic:zoomLogarithmicScale},zoomRectFunctions={default:zoomRectNumericalScale},panFunctions={category:panCategoryScale,default:panNumericalScale,logarithmic:panNonLinearScale,timeseries:panNonLinearScale};function shouldUpdateScaleLimits(e,t,n){var{id:e,options:{min:a,max:o}}=e;if(!t[e]||!n[e])return!0;t=n[e];return t.min!==a||t.max!==o}function removeMissingScales(n,a){each(n,(e,t)=>{a[t]||delete n[t]})}function storeOriginalScaleLimits(e,t){e=e.scales;const{originalScaleLimits:n,updatedScaleLimits:a}=t;return each(e,function(e){shouldUpdateScaleLimits(e,n,a)&&(n[e.id]={min:{scale:e.min,options:e.options.min},max:{scale:e.max,options:e.options.max}})}),removeMissingScales(n,e),removeMissingScales(a,e),n}function doZoom(e,t,n,a){var o=zoomFunctions[e.type]||zoomFunctions.default;callback(o,[e,t,n,a])}function doZoomRect(e,t,n,a){var o=zoomRectFunctions[e.type]||zoomRectFunctions.default;callback(o,[e,t,n,a])}function getCenter(e){e=e.chartArea;return{x:(e.left+e.right)/2,y:(e.top+e.bottom)/2}}function zoom(e,t,n="none",a="api"){const{x:o=1,y:i=1,focalPoint:r=getCenter(e)}="number"==typeof t?{x:t,y:t}:t;t=getState(e);const{limits:l,zoom:c}=t["options"],m=(storeOriginalScaleLimits(e,t),1!==o),s=1!==i;t=getEnabledScalesByPoint(c,r,e);each(t||e.scales,function(e){e.isHorizontal()&&m?doZoom(e,o,r,l):!e.isHorizontal()&&s&&doZoom(e,i,r,l)}),e.update(n),callback(c.onZoom,[{chart:e,trigger:a}])}function zoomRect(e,t,n,a="none",o="api"){var i=getState(e);const{limits:r,zoom:l}=i["options"];var{mode:c="xy"}=l;storeOriginalScaleLimits(e,i);const m=directionEnabled(c,"x",e),s=directionEnabled(c,"y",e);each(e.scales,function(e){e.isHorizontal()&&m?doZoomRect(e,t.x,n.x,r):!e.isHorizontal()&&s&&doZoomRect(e,t.y,n.y,r)}),e.update(a),callback(l.onZoom,[{chart:e,trigger:o}])}function zoomScale(e,t,n,a="none",o="api"){var i=getState(e),t=(storeOriginalScaleLimits(e,i),e.scales[t]);updateRange(t,n,void 0,!0),e.update(a),callback(i.options.zoom?.onZoom,[{chart:e,trigger:o}])}function resetZoom(e,t="default"){const n=getState(e),a=storeOriginalScaleLimits(e,n);each(e.scales,function(e){const t=e.options;a[e.id]?(t.min=a[e.id].min.options,t.max=a[e.id].max.options):(delete t.min,delete t.max),delete n.updatedScaleLimits[e.id]}),e.update(t),callback(n.options.zoom.onZoomComplete,[{chart:e}])}function getOriginalRange(e,t){var e=e.originalScaleLimits[t];if(e)return{min:t,max:e}=e,valueOrDefault(e.options,e.scale)-valueOrDefault(t.options,t.scale)}function getZoomLevel(e){const n=getState(e);let a=1,o=1;return each(e.scales,function(e){var t=getOriginalRange(n,e.id);t&&(t=Math.round(t/(e.max-e.min)*100)/100,a=Math.min(a,t),o=Math.max(o,t))}),a<1?a:o}function panScale(e,t,n,a){const o=a["panDelta"];a=o[e.id]||0,sign(a)===sign(t)&&(t+=a),a=panFunctions[e.type]||panFunctions.default;callback(a,[e,t,n])?o[e.id]=0:o[e.id]=t}function pan(e,t,n,a="none"){const{x:o=0,y:i=0}="number"==typeof t?{x:t,y:t}:t,r=getState(e),{pan:l,limits:c}=r["options"];t=(l||{}).onPan;storeOriginalScaleLimits(e,r);const m=0!==o,s=0!==i;each(n||e.scales,function(e){e.isHorizontal()&&m?panScale(e,o,c,r):!e.isHorizontal()&&s&&panScale(e,i,c,r)}),e.update(a),callback(t,[{chart:e}])}function getInitialScaleBounds(e){var t=getState(e);storeOriginalScaleLimits(e,t);const n={};for(const i of Object.keys(e.scales)){var{min:a,max:o}=t.originalScaleLimits[i]||{min:{},max:{}};n[i]={min:a.scale,max:o.scale}}return n}function getZoomedScaleBounds(e){var t=getState(e);const n={};for(const a of Object.keys(e.scales))n[a]=t.updatedScaleLimits[a];return n}function isZoomedOrPanned(e){var t=getInitialScaleBounds(e);for(const o of Object.keys(e.scales)){var{min:n,max:a}=t[o];if(void 0!==n&&e.scales[o].min!==n)return!0;if(void 0!==a&&e.scales[o].max!==a)return!0}return!1}function isZoomingOrPanning(e){e=getState(e);return e.panning||e.dragging}const clamp=(e,t,n)=>Math.min(n,Math.max(t,e));function removeHandler(e,t){const n=getState(e)["handlers"],a=n[t];a&&a.target&&(a.target.removeEventListener(t,a),delete n[t])}function addHandler(t,e,n,a){const{handlers:o,options:i}=getState(t);var r=o[n];r&&r.target===e||(removeHandler(t,n),o[n]=e=>a(t,e,i),(o[n].target=e).addEventListener(n,o[n],{passive:"wheel"!==n&&void 0}))}function mouseMove(e,t){const n=getState(e);n.dragStart&&(n.dragging=!0,n.dragEnd=t,e.update("none"))}function keyDown(e,t){const n=getState(e);n.dragStart&&"Escape"===t.key&&(removeHandler(e,"keydown"),n.dragging=!1,n.dragStart=n.dragEnd=null,e.update("none"))}function getPointPosition(e,t){var n;return e.target!==t.canvas?(n=t.canvas.getBoundingClientRect(),{x:e.clientX-n.left,y:e.clientY-n.top}):getRelativePosition(e,t)}function zoomStart(e,t,n){var{onZoomStart:n,onZoomRejected:a}=n;if(n){var o=getPointPosition(t,e);if(!1===callback(n,[{chart:e,event:t,point:o}]))return callback(a,[{chart:e,event:t}]),!1}}function mouseDown(e,t){if(e.legend){var n=getRelativePosition(t,e);if(_isPointInArea(n,e.legend))return}const a=getState(e);var{pan:n,zoom:o={}}=a.options;if(0!==t.button||keyPressed(getModifierKey(n),t)||keyNotPressed(getModifierKey(o.drag),t))return callback(o.onZoomRejected,[{chart:e,event:t}]);!1!==zoomStart(e,t,o)&&(a.dragStart=t,addHandler(e,e.canvas.ownerDocument,"mousemove",mouseMove),addHandler(e,window.document,"keydown",keyDown))}function applyAspectRatio({begin:e,end:t},n){let a=t.x-e.x,o=t.y-e.y;var i=Math.abs(a/o);n<i?a=Math.sign(a)*Math.abs(o*n):i<n&&(o=Math.sign(o)*Math.abs(a/n)),t.x=e.x+a,t.y=e.y+o}function applyMinMaxProps(e,t,n,{min:a,max:o,prop:i}){e[a]=clamp(Math.min(n.begin[i],n.end[i]),t[a],t[o]),e[o]=clamp(Math.max(n.begin[i],n.end[i]),t[a],t[o])}function getRelativePoints(e,t,n){t={begin:getPointPosition(t.dragStart,e),end:getPointPosition(t.dragEnd,e)};return n&&applyAspectRatio(t,e.chartArea.width/e.chartArea.height),t}function computeDragRect(e,t,n,a){var o=directionEnabled(t,"x",e),t=directionEnabled(t,"y",e),{top:i,left:r,right:l,bottom:c,width:m,height:s}=e.chartArea,i={top:i,left:r,right:l,bottom:c},r=getRelativePoints(e,n,a&&o&&t),l=(o&&applyMinMaxProps(i,e.chartArea,r,{min:"left",max:"right",prop:"x"}),t&&applyMinMaxProps(i,e.chartArea,r,{min:"top",max:"bottom",prop:"y"}),i.right-i.left),c=i.bottom-i.top;return{...i,width:l,height:c,zoomX:o&&l?1+(m-l)/m:1,zoomY:t&&c?1+(s-c)/s:1}}function mouseUp(e,t){const n=getState(e);if(n.dragStart){removeHandler(e,"mousemove");var{mode:a,onZoomComplete:o,drag:{threshold:i=0,maintainAspectRatio:r}}=n.options.zoom,t=computeDragRect(e,a,{dragStart:n.dragStart,dragEnd:t},r),r=directionEnabled(a,"x",e)?t.width:0,a=directionEnabled(a,"y",e)?t.height:0,r=Math.sqrt(r*r+a*a);if(n.dragStart=n.dragEnd=null,r<=i)return n.dragging=!1,void e.update("none");zoomRect(e,{x:t.left,y:t.top},{x:t.right,y:t.bottom},"zoom","drag"),n.dragging=!1,n.filterNextClick=!0,callback(o,[{chart:e}])}}function wheelPreconditions(e,t,n){if(keyNotPressed(getModifierKey(n.wheel),t))callback(n.onZoomRejected,[{chart:e,event:t}]);else if(!1!==zoomStart(e,t,n)&&(t.cancelable&&t.preventDefault(),void 0!==t.deltaY))return!0}function wheel(e,t){var n,{handlers:{onZoomComplete:a},options:{zoom:o}}=getState(e);wheelPreconditions(e,t,o)&&(n=t.target.getBoundingClientRect(),o=o.wheel.speed,zoom(e,{x:o=0<=t.deltaY?2-1/(1-o):1+o,y:o,focalPoint:{x:t.clientX-n.left,y:t.clientY-n.top}},"zoom","wheel"),callback(a,[{chart:e}]))}function addDebouncedHandler(e,t,n,a){n&&(getState(e).handlers[t]=debounce(()=>callback(n,[{chart:e}]),a))}function addListeners(e,t){var n=e.canvas,{wheel:t,drag:a,onZoomComplete:o}=t.zoom;t.enabled?(addHandler(e,n,"wheel",wheel),addDebouncedHandler(e,"onZoomComplete",o,250)):removeHandler(e,"wheel"),a.enabled?(addHandler(e,n,"mousedown",mouseDown),addHandler(e,n.ownerDocument,"mouseup",mouseUp)):(removeHandler(e,"mousedown"),removeHandler(e,"mousemove"),removeHandler(e,"mouseup"),removeHandler(e,"keydown"))}function removeListeners(e){removeHandler(e,"mousedown"),removeHandler(e,"mousemove"),removeHandler(e,"mouseup"),removeHandler(e,"wheel"),removeHandler(e,"click"),removeHandler(e,"keydown")}function createEnabler(i,r){return function(e,t){var{pan:n,zoom:a={}}=r.options;if(!n||!n.enabled)return!1;var o=t&&t.srcEvent;return!o||(!(!r.panning&&"mouse"===t.pointerType&&(keyNotPressed(getModifierKey(n),o)||keyPressed(getModifierKey(a.drag),o)))||(callback(n.onPanRejected,[{chart:i,event:t}]),!1))}}function pinchAxes(e,t){var n=Math.abs(e.clientX-t.clientX),e=Math.abs(e.clientY-t.clientY),t=n/e;let a,o;return.3<t&&t<1.7?a=o=!0:e<n?a=!0:o=!0,{x:a,y:o}}function handlePinch(e,t,n){var a,o,i,r,l;t.scale&&({center:a,pointers:r}=n,o=1/t.scale*n.scale,i=n.target.getBoundingClientRect(),r=pinchAxes(r[0],r[1]),l=t.options.zoom.mode,zoom(e,{x:r.x&&directionEnabled(l,"x",e)?o:1,y:r.y&&directionEnabled(l,"y",e)?o:1,focalPoint:{x:a.x-i.left,y:a.y-i.top}},"zoom","pinch"),t.scale=n.scale)}function startPinch(e,t,n){var a;t.options.zoom.pinch.enabled&&(a=getRelativePosition(n,e),!1===callback(t.options.zoom.onZoomStart,[{chart:e,event:n,point:a}])?(t.scale=null,callback(t.options.zoom.onZoomRejected,[{chart:e,event:n}])):t.scale=1)}function endPinch(e,t,n){t.scale&&(handlePinch(e,t,n),t.scale=null,callback(t.options.zoom.onZoomComplete,[{chart:e}]))}function handlePan(e,t,n){var a=t.delta;a&&(t.panning=!0,pan(e,{x:n.deltaX-a.x,y:n.deltaY-a.y},t.panScales),t.delta={x:n.deltaX,y:n.deltaY})}function startPan(e,t,n){var{enabled:a,onPanStart:o,onPanRejected:i}=t.options.pan;if(a){a=n.target.getBoundingClientRect(),a={x:n.center.x-a.left,y:n.center.y-a.top};if(!1===callback(o,[{chart:e,event:n,point:a}]))return callback(i,[{chart:e,event:n}]);t.panScales=getEnabledScalesByPoint(t.options.pan,a,e),t.delta={x:0,y:0},handlePan(e,t,n)}}function endPan(e,t){t.delta=null,t.panning&&(t.panning=!1,t.filterNextClick=!0,callback(t.options.pan.onPanComplete,[{chart:e}]))}const hammers=new WeakMap;function startHammer(t,e){const n=getState(t);var a=t.canvas,{pan:e,zoom:o}=e;const i=new Hammer.Manager(a);o&&o.pinch.enabled&&(i.add(new Hammer.Pinch),i.on("pinchstart",e=>startPinch(t,n,e)),i.on("pinch",e=>handlePinch(t,n,e)),i.on("pinchend",e=>endPinch(t,n,e))),e&&e.enabled&&(i.add(new Hammer.Pan({threshold:e.threshold,enable:createEnabler(t,n)})),i.on("panstart",e=>startPan(t,n,e)),i.on("panmove",e=>handlePan(t,n,e)),i.on("panend",()=>endPan(t,n))),hammers.set(t,i)}function stopHammer(e){const t=hammers.get(e);t&&(t.remove("pinchstart"),t.remove("pinch"),t.remove("pinchend"),t.remove("panstart"),t.remove("pan"),t.remove("panend"),t.destroy(),hammers.delete(e))}function hammerOptionsChanged(e,t){var{pan:e,zoom:n}=e,{pan:t,zoom:a}=t;return n?.zoom?.pinch?.enabled!==a?.zoom?.pinch?.enabled||(e?.enabled!==t?.enabled||e?.threshold!==t?.threshold)}var version="2.2.0";function draw(e,t,n){var a=n.zoom.drag,{dragStart:o,dragEnd:i}=getState(e);if(a.drawTime===t&&i){var{left:t,top:n,width:o,height:i}=computeDragRect(e,n.zoom.mode,{dragStart:o,dragEnd:i},a.maintainAspectRatio);const r=e.ctx;r.save(),r.beginPath(),r.fillStyle=a.backgroundColor||"rgba(225,225,225,0.3)",r.fillRect(t,n,o,i),0<a.borderWidth&&(r.lineWidth=a.borderWidth,r.strokeStyle=a.borderColor||"rgba(225,225,225)",r.strokeRect(t,n,o,i)),r.restore()}}var plugin={id:"zoom",version:version,defaults:{pan:{enabled:!1,mode:"xy",threshold:10,modifierKey:null},zoom:{wheel:{enabled:!1,speed:.1,modifierKey:null},drag:{enabled:!1,drawTime:"beforeDatasetsDraw",modifierKey:null},pinch:{enabled:!1},mode:"xy"}},start:function(a,e,t){const n=getState(a);n.options=t,Object.prototype.hasOwnProperty.call(t.zoom,"enabled")&&console.warn("The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`."),(Object.prototype.hasOwnProperty.call(t.zoom,"overScaleMode")||Object.prototype.hasOwnProperty.call(t.pan,"overScaleMode"))&&console.warn("The option `overScaleMode` is deprecated. Please use `scaleMode` instead (and update `mode` as desired)."),Hammer&&startHammer(a,t),a.pan=(e,t,n)=>pan(a,e,t,n),a.zoom=(e,t)=>zoom(a,e,t),a.zoomRect=(e,t,n)=>zoomRect(a,e,t,n),a.zoomScale=(e,t,n)=>zoomScale(a,e,t,n),a.resetZoom=e=>resetZoom(a,e),a.getZoomLevel=()=>getZoomLevel(a),a.getInitialScaleBounds=()=>getInitialScaleBounds(a),a.getZoomedScaleBounds=()=>getZoomedScaleBounds(a),a.isZoomedOrPanned=()=>isZoomedOrPanned(a),a.isZoomingOrPanning=()=>isZoomingOrPanning(a)},beforeEvent(e,{event:t}){if(isZoomingOrPanning(e))return!1;if("click"===t.type||"mouseup"===t.type){const n=getState(e);if(n.filterNextClick)return n.filterNextClick=!1}},beforeUpdate:function(e,t,n){const a=getState(e);hammerOptionsChanged(a.options,a.options=n)&&(stopHammer(e),startHammer(e,n)),addListeners(e,n)},beforeDatasetsDraw(e,t,n){draw(e,"beforeDatasetsDraw",n)},afterDatasetsDraw(e,t,n){draw(e,"afterDatasetsDraw",n)},beforeDraw(e,t,n){draw(e,"beforeDraw",n)},afterDraw(e,t,n){draw(e,"afterDraw",n)},stop:function(e){removeListeners(e),Hammer&&stopHammer(e),removeState(e)},panFunctions:panFunctions,zoomFunctions:zoomFunctions,zoomRectFunctions:zoomRectFunctions};export{plugin as default,pan,resetZoom,zoom,zoomRect,zoomScale};