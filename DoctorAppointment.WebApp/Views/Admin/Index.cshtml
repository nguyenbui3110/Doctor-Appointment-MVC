@using DoctorAppointment.Domain.Enums
@using DoctorAppointment.WebApp.Commons.Helpers
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin";
}
@model PagingItem<DoctorViewModel>

<div class="row mb-4 justify-content-between align-items-center">
    <div class="col-md-4">
        <form class="d-flex align-items-center h-100" id="searchForm" asp-controller="Admin" asp-action="Index" method="get">
            <input type="text" name="searchQuery" placeholder="Bác Sĩ..."
                   class="form-control me-2" aria-label="Search Doctor" value="@ViewBag.SearchQuery" style="height: 38px;" />

            <select class="form-select me-2" name="specialization"
                    asp-items="Html.GetEnumSelectList<Specialization>()" style="height: 38px;">
                <option value="" disabled selected>Khoa</option>
            </select>
            <button type="submit" class="btn btn-primary" style="height: 38px;"><i class="fa fa-search"></i></button>
        </form>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addDoctorModal" style="height: 38px;">
            <i class="fa fa-plus"></i> Tạo mới bác sĩ
        </button>
    </div>
</div>



@if(Model.Items.Count == 0)
{
    <div class="alert alert-warning" role="alert">
        Không tìm thấy bác sĩ
    </div>
}
else
{
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Tên</th>
            <th scope="col">khoa</th>
            <th scope="col">Số năm kinh nghiệm</th>
            <th scope="col">Bị khóa </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.UserId</td>
                <td>@item.User.FullName</td>
                <td>@DisplayName.GetSpecialization(@item.Specialization)</td>
                <td>@item.YearsOfExperience</td>
                <td><input type="checkbox" value="" disabled checked=@item.IsDeleted ></td>
                <td>
                    @* <a asp-action="UpdateItem" asp-route-id="@item.UserId" class="btn btn-primary">Update</a> *@
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateDoctorModal"
                        UpdateId="@item.Id"><div class="fa fa-pencil"></div> Update</button>
                    @if (item.IsDeleted)
                    {
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#restoreDoctorModal_@item.Id"
                            RestoreId="@item.Id"><div class="fa fa-repeat"></div> phục hồi</button>
                        <partial name="_RestoreDoctor" model="@item.Id" />
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteDoctorModal_@item.Id"
                            DeleteId="@item.Id"><div class="fa fa-lock"></div> Khóa</button>
                        <partial name="_DeleteDoctor" model="@item.Id" />
                    }
                </td>
                
            </tr>
        }
    </tbody>
</table>
}
<!-- Modal Placeholder -->
<div id="addDoctorModalContainer"></div>
<div id="updateDoctorModalContainer"></div>

<partial name="_Paging" model="Model" />
@section Scripts {
    <script>
        $(document).ready(function () {
            // Load add modal content dynamically
            $('button[data-bs-target="#addDoctorModal"]').on('click', function () {
                const modalElement = document.getElementById('addDoctorModal');
                if (modalElement) {
                    const bootstrapModal = bootstrap.Modal.getInstance(modalElement);
                    bootstrapModal.dispose();
                }
                $.get('/Admin/AddDoctor', function (data) {
                    $('#addDoctorModalContainer').html(data);
                    $('#addDoctorModal').modal('show');
                });
            });
            // Load update modal content dynamically
            $('button[data-bs-target="#updateDoctorModal"]').on('click', function () {
                @* $('#updateDoctorModalContainer').empty(); *@
                $('#updateDoctorModal').hide();
                var id = $(this).attr('UpdateId');
                $.get('/Admin/UpdateDoctor/' + id, function (data) {
                    $('#updateDoctorModalContainer').html(data);
                    $('#updateDoctorModal_'+id).modal('show');
                });
            });
        });
        
        // Handle form submission for adding a doctor
        $(document).on('click', '#AddDoctorForm button[type="submit"]', function (e) {
            e.preventDefault(); // Prevent default form submission

            var form = $('#AddDoctorForm'); // Get the form element

            // Use AJAX to submit the form
            $.ajax({
                url: form.attr('action'), // The form action URL
                type: 'POST', // The HTTP method
                data: form.serialize(), // Serialize the form data
                success: function (data) {
                    if (data.success) {
                        // If submission is successful
                        $('#addDoctorModal').modal('hide'); // Close the modal
                        location.reload(); // Reload the page to reflect changes
                    } else {
                        const modalElement = document.getElementById('addDoctorModal');
                        const bootstrapModal = bootstrap.Modal.getInstance(modalElement);
                        bootstrapModal.dispose();
                        $('#addDoctorModalContainer').html(data);
                        // If there are errors, show them in the modal
                        $('#addDoctorModal').modal('show');
                        // Replace modal content with the response
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('An error occurred while adding the doctor.');
                }
            });
        });

        // Handle form submission for updating a doctor
        $(document).on('click', '#UpdateDoctorForm button[type="submit"]', function (e) {
            e.preventDefault(); // Prevent default form submission

            var form = $('#UpdateDoctorForm'); // Get the form element

            // Use AJAX to submit the form
            $.ajax({
                url: form.attr('action'), // The form action URL
                type: 'POST', // The HTTP method
                data: form.serialize(), // Serialize the form data
                success: function (data) {
                    if (data.success) {
                        // If submission is successful
                        $('#updateDoctorModal').modal('hide'); // Close the modal
                        location.reload(); // Reload the page to reflect changes
                    } else {
                        $('#updateDoctorModal').modal('hide'); // Close the modal
                        // If there are errors, show them in the modal
                        $('#updateDoctorModalContainer').html(data);
                        $('#updateDoctorModal').modal('show');
                        // Replace modal content with the response
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('An error occurred while updating the doctor.');
                }
            });
        });
    </script>
}
